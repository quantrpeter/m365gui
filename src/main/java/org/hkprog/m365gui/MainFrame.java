package org.hkprog.m365gui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import hk.quantr.javalib.CommonLib;
import hk.quantr.setting.library.QuantrSettingLibrary;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.json.JSONObject;
import org.json.JSONArray;
import org.hkprog.m365gui.commandPanel.LoginPanel;
import org.hkprog.m365gui.commandPanel.LogoutPanel;
import org.hkprog.m365gui.commandPanel.ResultPanel;

/**
 *
 * @author Peter <peter@quantr.hk>
 */
public class MainFrame extends javax.swing.JFrame {

	public static Setting setting = new Setting();

	/**
	 * Creates new form MainFrame
	 */
	public MainFrame() {
		initComponents();
		try {
			QuantrSettingLibrary.load("m365gui", setting);
		} catch (IOException ex) {
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IllegalArgumentException ex) {
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
		// Load Microsoft 365 CLI commands from JSON file
		DefaultMutableTreeNode root = new DefaultMutableTreeNode(new TreeNodeData("Microsoft 365 CLI", null));
		try {
			InputStream is = getClass().getResourceAsStream("/m365cli-commands.json");
			if (is != null) {
				byte[] bytes = is.readAllBytes();
				String jsonText = new String(bytes);
				JSONArray arr = new JSONArray(jsonText);
				for (int i = 0; i < arr.length(); i++) {
					JSONObject obj = arr.getJSONObject(i);
					String category = obj.getString("category");
					String catIcon = obj.optString("icon", null);
					JSONArray commands = obj.getJSONArray("commands");
					DefaultMutableTreeNode catNode = new DefaultMutableTreeNode(new TreeNodeData(category, catIcon));
					for (int j = 0; j < commands.length(); j++) {
						JSONObject cmdObj = commands.getJSONObject(j);
						String cmdName = cmdObj.getString("name");
						String cmdIcon = cmdObj.optString("icon", null);
						catNode.add(new DefaultMutableTreeNode(new TreeNodeData(cmdName, cmdIcon)));
					}
					root.add(catNode);
				}
			}
		} catch (Exception e) {
			root.add(new DefaultMutableTreeNode(new TreeNodeData("Failed to load commands", null)));
		}
		functionTree.setModel(new DefaultTreeModel(root));
		functionTree.setCellRenderer(new javax.swing.tree.DefaultTreeCellRenderer() {
			@Override
			public java.awt.Component getTreeCellRendererComponent(javax.swing.JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
				java.awt.Component c = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
				if (value instanceof DefaultMutableTreeNode) {
					Object userObj = ((DefaultMutableTreeNode) value).getUserObject();
					if (userObj instanceof TreeNodeData) {
						TreeNodeData data = (TreeNodeData) userObj;
						if (data.iconPath != null) {
							java.net.URL iconUrl = getClass().getResource("/" + data.iconPath);
							if (iconUrl != null) {
								setIcon(new javax.swing.ImageIcon(iconUrl));
							}
						}
					}
				}
				return c;
			}
		});
		expandAllButtonActionPerformed(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
	 * Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        functionTree = new javax.swing.JTree();
        jPanel4 = new javax.swing.JPanel();
        expandAllButton = new javax.swing.JButton();
        collapseAllButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        m365guiLogoLabel = new hk.quantr.javalib.swing.advancedswing.highdpijlabel.HighDPIJLabel();
        jToolBar1 = new javax.swing.JToolBar();
        settingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(300);

        jPanel2.setLayout(new java.awt.BorderLayout());

        functionTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                functionTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(functionTree);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        expandAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famfamfam/bullet_toggle_plus.png"))); // NOI18N
        expandAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandAllButtonActionPerformed(evt);
            }
        });
        jPanel4.add(expandAllButton);

        collapseAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/famfamfam/bullet_toggle_minus.png"))); // NOI18N
        collapseAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collapseAllButtonActionPerformed(evt);
            }
        });
        jPanel4.add(collapseAllButton);

        jPanel2.add(jPanel4, java.awt.BorderLayout.NORTH);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));
        mainScrollPane.setViewportView(mainPanel);

        jPanel3.add(mainScrollPane, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        m365guiLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/m365gui.png"))); // NOI18N
        m365guiLogoLabel.setPreferredSize(new java.awt.Dimension(50, 50));
        jPanel1.add(m365guiLogoLabel);

        jPanel5.add(jPanel1, java.awt.BorderLayout.NORTH);

        jToolBar1.setRollover(true);

        settingButton.setText("Setting");
        settingButton.setFocusable(false);
        settingButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        settingButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        settingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(settingButton);

        jPanel5.add(jToolBar1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.NORTH);

        setSize(new java.awt.Dimension(790, 604));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void expandAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandAllButtonActionPerformed
		CommonLib.expandAll(functionTree, true);
    }//GEN-LAST:event_expandAllButtonActionPerformed

    private void collapseAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collapseAllButtonActionPerformed
		CommonLib.expandAll(functionTree, false);
    }//GEN-LAST:event_collapseAllButtonActionPerformed

    private void addMessageComponent(java.awt.Component comp) {
        javax.swing.JPanel wrapper = new javax.swing.JPanel();
		wrapper.setOpaque(false);
        wrapper.setLayout(new javax.swing.BoxLayout(wrapper, javax.swing.BoxLayout.X_AXIS));
        wrapper.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8)); // margin
        wrapper.add(comp);
        wrapper.setMaximumSize(wrapper.getPreferredSize()); // Prevent vertical stretching
        mainPanel.add(wrapper);
        mainPanel.revalidate();
        mainPanel.repaint();
    }

    private void functionTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_functionTreeMouseClicked
        if (evt.getClickCount() == 2) {
            javax.swing.tree.TreePath path = functionTree.getPathForLocation(evt.getX(), evt.getY());
            if (path != null) {
                Object nodeObj = ((DefaultMutableTreeNode) path.getLastPathComponent()).getUserObject();
                if (nodeObj instanceof TreeNodeData) {
                    TreeNodeData data = (TreeNodeData) nodeObj;
                    if ("login".equalsIgnoreCase(data.name)) {
                        addMessageComponent(new LoginPanel(""));
                    }else if ("logout".equalsIgnoreCase(data.name)) {
                        addMessageComponent(new LogoutPanel());
                    }else if ("info".equalsIgnoreCase(data.name)) {
                                                LoginPanel panel = new LoginPanel("tenant info get");
                                                addMessageComponent(panel);
                                                String result = panel.execute();
                                                ResultPanel resultPanel = new ResultPanel();
                                                resultPanel.jTextArea1.setText(result);
                                                addMessageComponent(resultPanel);
                                        }
                }
            }
        }

    }//GEN-LAST:event_functionTreeMouseClicked

    private void settingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingButtonActionPerformed
		SettingDialog dialog = new SettingDialog(this, true);
		dialog.setLocationRelativeTo(null);
		dialog.setVisible(true);
		if (!dialog.isCancelled()) {
			try {
				setting.m365Path = dialog.m365PathTextField.getText();
				QuantrSettingLibrary.save("m365gui", setting);
			} catch (Exception ex) {
				Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_settingButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			UIManager.setLookAndFeel(new FlatIntelliJLaf());
		} catch (Exception ex) {
			System.err.println("Failed to initialize LaF");
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton collapseAllButton;
    private javax.swing.JButton expandAllButton;
    private javax.swing.JTree functionTree;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private hk.quantr.javalib.swing.advancedswing.highdpijlabel.HighDPIJLabel m365guiLogoLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JButton settingButton;
    // End of variables declaration//GEN-END:variables
}

package org.hkprog.m365gui;

/**
 *
 * @author peter
 */
public class SettingDialog extends javax.swing.JDialog {

	private boolean cancelled = false;

	/**
	 * Creates new form SettingDialog
	 */
	public SettingDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();

		m365PathTextField.setText(MainFrame.setting.m365Path);
	}

	/**
	 * Returns true if the dialog was cancelled
	 */
	public boolean isCancelled() {
		return cancelled;
	}

	/**
	 * Gets the M365 command path from the text field
	 */
	public String getM365Path() {
		return m365PathTextField.getText();
	}

	/**
	 * Sets the M365 command path in the text field
	 */
	public void setM365Path(String path) {
		m365PathTextField.setText(path);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
	 * Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        m365PathTextField = new javax.swing.JTextField();
        browseM365PathButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.setToolTipText("");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jPanel1.add(saveButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jLabel1.setText("M365 Command Path");

        browseM365PathButton.setText("...");
        browseM365PathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseM365PathButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m365PathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseM365PathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(m365PathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseM365PathButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 900, 116);
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
		cancelled = false;
		this.setVisible(false);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		cancelled = true;
		this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		cancelled = true;
		setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void browseM365PathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseM365PathButtonActionPerformed
		javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
		fileChooser.setDialogTitle("Select M365 CLI Executable");
		fileChooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);

		// Set current path if exists
		String currentPath = m365PathTextField.getText().trim();
		if (!currentPath.isEmpty()) {
			java.io.File currentFile = new java.io.File(currentPath);
			if (currentFile.exists()) {
				fileChooser.setSelectedFile(currentFile);
			} else if (currentFile.getParentFile() != null && currentFile.getParentFile().exists()) {
				fileChooser.setCurrentDirectory(currentFile.getParentFile());
			}
		} else {
			// Default to common locations on macOS
			String[] commonPaths = {
				"/usr/local/bin",
				"/opt/homebrew/bin",
				System.getProperty("user.home") + "/.nvm/versions/node/v24.2.0/bin"
			};
			for (String path : commonPaths) {
				java.io.File dir = new java.io.File(path);
				if (dir.exists()) {
					fileChooser.setCurrentDirectory(dir);
					break;
				}
			}
		}

		// On Unix/macOS, executables don't have extensions, so we'll use a custom file filter
		javax.swing.filechooser.FileFilter executableFilter = new javax.swing.filechooser.FileFilter() {
			@Override
			public boolean accept(java.io.File f) {
				if (f.isDirectory()) {
					return true; // Allow directories for navigation
				}
				// Check if file is executable
				return f.canExecute() && !f.getName().contains(".");
			}
			
			@Override
			public String getDescription() {
				return "Executable files";
			}
		};
		fileChooser.addChoosableFileFilter(executableFilter);
		fileChooser.setAcceptAllFileFilterUsed(true);

		int result = fileChooser.showOpenDialog(this);
		if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
			java.io.File selectedFile = fileChooser.getSelectedFile();
			m365PathTextField.setText(selectedFile.getAbsolutePath());
		}
    }//GEN-LAST:event_browseM365PathButtonActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SettingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SettingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SettingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SettingDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				SettingDialog dialog = new SettingDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseM365PathButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JTextField m365PathTextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
